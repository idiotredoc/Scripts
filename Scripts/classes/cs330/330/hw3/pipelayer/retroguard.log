# If this log is to be used for incremental obfuscation / patch generation, 
# add any '.class', '.method', '.field' and '.attribute' restrictions here:


#-DO-NOT-EDIT-BELOW-THIS-LINE------------------DO-NOT-EDIT-BELOW-THIS-LINE--
#
# RetroGuard v2.3.1, by Retrologic Systems - www.retrologic.com
#
# Logfile created on Mon Apr 18 22:31:18 EDT 2011
#
# Jar file to be obfuscated:           temp.jar
# Target Jar file for obfuscated code: CS330_Spring2011_Pipes.jar
# RetroGuard Script file used:         retroguard.dat
#
# WARNING - identifier from script file not found in JAR: TestKit/main
#
# Memory in use after class data structure built: 3451784 bytes
# Total memory available                        : 518520832 bytes
#
#
# Obfuscated name overloading frequency:
#  'a'   	used 23 times	(36%)
#  'if'   	used 11 times	(17%)
#  'do'   	used 6 times	(9%)
#  'for'   	used 3 times	(4%)
#  'int'   	used 3 times	(4%)
#  'b'   	used 1 times	(1%)
#  'c'   	used 1 times	(1%)
#  'd'   	used 1 times	(1%)
#  'e'   	used 1 times	(1%)
#  'f'   	used 1 times	(1%)
#  'g'   	used 1 times	(1%)
#  'h'   	used 1 times	(1%)
#  'i'   	used 1 times	(1%)
#  'j'   	used 1 times	(1%)
#  'k'   	used 1 times	(1%)
#  'l'   	used 1 times	(1%)
#  'new'   	used 1 times	(1%)
#  'm'   	used 1 times	(1%)
#  'n'   	used 1 times	(1%)
#  'o'   	used 1 times	(1%)
#  'p'   	used 1 times	(1%)
#  'try'   	used 1 times	(1%)
#  Other names (each used in <1% of mappings) used a total of 0 times (13%)
#
#
# Names reserved from obfuscation:
#
.class PipeLayer/Game
.method PipeLayer/Game/main ([Ljava/lang/String;)V
.class PipeLayer/GameApplet
.method PipeLayer/GameApplet/start ()V
.method PipeLayer/GameApplet/init ()V
.class PipeLayer/GameBoard
.method PipeLayer/GameBoard/rescore ()V
.method PipeLayer/GameBoard/actionPerformed (Ljava/awt/event/ActionEvent;)V
.method PipeLayer/GameBoard/computeScore ()V
#
#
# Obfuscated name mappings (some of these may be unchanged due to polymorphism constraints):
#
.class_map PipeLayer/LeftUpPipe a
.method_map PipeLayer/LeftUpPipe/isOpenAtThisEnd (I)Z a
.method_map PipeLayer/LeftUpPipe/clone ()Ljava/lang/Object; clone
.method_map PipeLayer/LeftUpPipe/emergeDirection (I)I if
.class_map PipeLayer/PipeKit b
.field_map PipeLayer/PipeKit/thePipes a
.method_map PipeLayer/PipeKit/size ()I a
.method_map PipeLayer/PipeKit/getPipe (I)LPipeLayer/Pipe; a
.class_map PipeLayer/Game$1 1
.field_map PipeLayer/Game$1/this$0 a
.method_map PipeLayer/Game$1/windowClosing (Ljava/awt/event/WindowEvent;)V windowClosing
.method_map PipeLayer/Game/getPreferredSize ()Ljava/awt/Dimension; getPreferredSize
.class_map PipeLayer/Tile$1 1
.field_map PipeLayer/Tile$1/this$0 a
.method_map PipeLayer/Tile$1/mouseClicked (Ljava/awt/event/MouseEvent;)V mouseClicked
.class_map PipeLayer/Tile c
.field_map PipeLayer/Tile/tileSize a
.field_map PipeLayer/Tile/thePipe if
.method_map PipeLayer/Tile/selected ()V a
.method_map PipeLayer/Tile/setPipe (LPipeLayer/Pipe;)V a
.method_map PipeLayer/Tile/getPipe ()LPipeLayer/Pipe; if
.method_map PipeLayer/Tile/getMaximumSize ()Ljava/awt/Dimension; getMaximumSize
.method_map PipeLayer/Tile/paint (Ljava/awt/Graphics;)V paint
.method_map PipeLayer/Tile/getPreferredSize ()Ljava/awt/Dimension; getPreferredSize
.method_map PipeLayer/Tile/getMinimumSize ()Ljava/awt/Dimension; getMinimumSize
.class_map PipeLayer/StatusLine d
.field_map PipeLayer/StatusLine/nextPipeTile a
.field_map PipeLayer/StatusLine/resetButton if
.field_map PipeLayer/StatusLine/scoreLabel do
.method_map PipeLayer/StatusLine/setScore (I)V a
.class_map PipeLayer/VerticalPipe e
.method_map PipeLayer/VerticalPipe/isOpenAtThisEnd (I)Z a
.method_map PipeLayer/VerticalPipe/clone ()Ljava/lang/Object; clone
.method_map PipeLayer/VerticalPipe/emergeDirection (I)I if
.class_map PipeLayer/Grid f
.field_map PipeLayer/Grid/gridSize a
.field_map PipeLayer/Grid/tiles if
.method_map PipeLayer/Grid/reset ()V a
.method_map PipeLayer/Grid/paint (Ljava/awt/Graphics;)V paint
.method_map PipeLayer/Grid/getTile (II)LPipeLayer/Tile; a
.class_map PipeLayer/RightUpPipe g
.method_map PipeLayer/RightUpPipe/isOpenAtThisEnd (I)Z a
.method_map PipeLayer/RightUpPipe/clone ()Ljava/lang/Object; clone
.method_map PipeLayer/RightUpPipe/emergeDirection (I)I if
.field_map PipeLayer/GameApplet/board a
.class_map PipeLayer/GameState h
.field_map PipeLayer/GameState/game a
.field_map PipeLayer/GameState/rnd if
.field_map PipeLayer/GameState/theNextPipe do
.field_map PipeLayer/GameState/kit for
.field_map PipeLayer/GameState/nextPipeGraphic int
.method_map PipeLayer/GameState/useNextPipe ()LPipeLayer/Pipe; a
.method_map PipeLayer/GameState/rescore ()V if
.method_map PipeLayer/GameState/nextPipe ()LPipeLayer/Pipe; do
.class_map PipeLayer/LeftDownPipe i
.method_map PipeLayer/LeftDownPipe/isOpenAtThisEnd (I)Z a
.method_map PipeLayer/LeftDownPipe/clone ()Ljava/lang/Object; clone
.method_map PipeLayer/LeftDownPipe/emergeDirection (I)I if
.field_map PipeLayer/GameBoard/status a
.field_map PipeLayer/GameBoard/grid if
.class_map PipeLayer/RightDownPipe j
.method_map PipeLayer/RightDownPipe/isOpenAtThisEnd (I)Z a
.method_map PipeLayer/RightDownPipe/clone ()Ljava/lang/Object; clone
.method_map PipeLayer/RightDownPipe/emergeDirection (I)I if
.class_map PipeLayer/CrossPipe k
.method_map PipeLayer/CrossPipe/isOpenAtThisEnd (I)Z a
.method_map PipeLayer/CrossPipe/clone ()Ljava/lang/Object; clone
.method_map PipeLayer/CrossPipe/emergeDirection (I)I if
.class_map PipeLayer/StatusTile l
.method_map PipeLayer/StatusTile/selected ()V a
.method_map PipeLayer/StatusTile/paint (Ljava/awt/Graphics;)V paint
.class_map PipeLayer/HorizontalPipe m
.method_map PipeLayer/HorizontalPipe/isOpenAtThisEnd (I)Z a
.method_map PipeLayer/HorizontalPipe/clone ()Ljava/lang/Object; clone
.method_map PipeLayer/HorizontalPipe/emergeDirection (I)I if
.class_map PipeLayer/BoardLayout n
.field_map PipeLayer/BoardLayout/height a
.field_map PipeLayer/BoardLayout/sizeUnknown if
.field_map PipeLayer/BoardLayout/preferredWidth do
.field_map PipeLayer/BoardLayout/width for
.field_map PipeLayer/BoardLayout/preferredHeight int
.field_map PipeLayer/BoardLayout/minWidth new
.field_map PipeLayer/BoardLayout/minHeight try
.method_map PipeLayer/BoardLayout/minimumLayoutSize (Ljava/awt/Container;)Ljava/awt/Dimension; minimumLayoutSize
.method_map PipeLayer/BoardLayout/setSizes (Ljava/awt/Container;)V a
.method_map PipeLayer/BoardLayout/removeLayoutComponent (Ljava/awt/Component;)V removeLayoutComponent
.method_map PipeLayer/BoardLayout/layoutContainer (Ljava/awt/Container;)V layoutContainer
.method_map PipeLayer/BoardLayout/toString ()Ljava/lang/String; toString
.method_map PipeLayer/BoardLayout/preferredLayoutSize (Ljava/awt/Container;)Ljava/awt/Dimension; preferredLayoutSize
.method_map PipeLayer/BoardLayout/addLayoutComponent (Ljava/lang/String;Ljava/awt/Component;)V addLayoutComponent
.class_map PipeLayer/Pipe o
.field_map PipeLayer/Pipe/Up a
.field_map PipeLayer/Pipe/Left if
.field_map PipeLayer/Pipe/Down do
.field_map PipeLayer/Pipe/filled for
.field_map PipeLayer/Pipe/Right int
.method_map PipeLayer/Pipe/isFilled ()Z a
.method_map PipeLayer/Pipe/isOpenAtThisEnd (I)Z a
.method_map PipeLayer/Pipe/clone ()Ljava/lang/Object; clone
.method_map PipeLayer/Pipe/fill ()V if
.method_map PipeLayer/Pipe/emergeDirection (I)I if
.method_map PipeLayer/Pipe/empty ()V do
.class_map PipeLayer/Scored p
.method_map PipeLayer/Scored/computeScore ()V computeScore
